def func2(arg13, arg14):
    var17 = class3()
    for var18 in range(48):
        var19 = var17.func4
        var19(var18, var18)
    var30 = func5(arg14, arg13)
    var55 = var33(arg13, arg14)
    if arg13 < var55:
        var60 = class11()
    else:
        var60 = class13()
    for var61 in xrange(19):
        var60.func12(var30, var61)
    result = (arg14 - ((arg14 + 1664155025) | ((var30 ^ var55 ^ arg13) - (5433889 ^ (var30 - 980)) - -481 & var30))) ^ var55
    return result
class class13(object):
    def func12(self, arg58, arg59):
        return 0
class class11(class13):
    def func12(self, arg56, arg57):
        return 0
def func10(arg34, arg35):
    if arg35 < arg35:
        var36 = arg34 + 927 ^ arg35
    else:
        var36 = arg34 + (arg34 | arg34) + arg35
    if arg35 < arg35:
        var37 = 391213292 ^ (arg35 - 392) ^ 0
    else:
        var37 = 1601273586 & arg35 | arg35
    if arg35 < arg35:
        var38 = 244 - (593 + -24 + arg35)
    else:
        var38 = (-419 | arg34 + -927) + -423
    if arg35 < arg34:
        var39 = (arg34 - 425 ^ arg34) ^ -835
    else:
        var39 = arg35 & (-581 | arg35 | arg34)
    var40 = (arg34 - arg35) - -1256005462 ^ -885
    if arg35 < var40:
        var41 = -1971076516 - arg35 & -728 - arg34
    else:
        var41 = -617462774 + 367
    if arg35 < arg34:
        var42 = (613 - -806 & arg35) + 890769316
    else:
        var42 = var40 | arg35 & 244043025 | arg34
    var43 = arg34 + -395
    var44 = var40 - arg34
    var45 = (1775516675 | var40) - (1516415091 ^ var43)
    var46 = 596 ^ var44
    var47 = arg35 | arg35 + var40
    if var43 < var45:
        var48 = var40 + 1405087829 | var44 - var45
    else:
        var48 = var46 + var47 - (860 + var47)
    var49 = (arg35 + var46 + var43) - 574
    var50 = var46 | 534 + arg34 + arg34
    var51 = (-652178469 ^ (-1534274579 - var46)) & var46
    var52 = -445 + var51
    var53 = arg34 & arg34 & var45
    var54 = 538 - arg34
    result = var52 ^ (var50 | -3275376 | var53 | var53 - -283)
    return result
def func9():
    closure = [0]
    def func8(arg31, arg32):
        closure[0] += func10(arg31, arg32)
        return closure[0]
    func = func8
    return func
var33 = func9()
def func5(arg20, arg21):
    var25 = func6(arg20, arg21)
    var26 = -72 | var25 | (arg21 | (187 - arg20) + var25) | (1775362299 ^ arg21) & (978 | -555)
    var27 = var25 & var26 - ((((var25 ^ var25 - ((((arg21 & arg21) & var25) - 165) & var26 - arg20 + var26)) ^ -1411271758 - arg21) | -469851418) - arg21) ^ ((-207285883 | arg21 - var26) ^ arg21) & -316 ^ arg21 + var26
    var28 = -47896105 + (arg21 ^ (var25 & ((var26 & var27) + arg21)) - (-1642555698 + arg21)) ^ var25
    var29 = var27 | var27 | var26
    result = ((189 + (317412593 & var25) | (var28 - arg20)) & (var28 & arg21 - var28 | var28)) & arg21 ^ var26 - var27
    return result
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 - (-58 & arg1)
    var4 = -235 & -280 + arg2
    if var4 < arg1:
        var5 = arg1 ^ 939697974
    else:
        var5 = var4 & var3
    var6 = arg1 + arg1
    var7 = -944 + var6
    var8 = var4 & var4
    var9 = arg2 - var4
    var10 = var4 + var4
    var11 = var4 + (arg1 ^ arg1) & var8
    var12 = var10 ^ (-328724374 + var6) & var7
    result = (((var10 ^ (var6 - var12) + var3) ^ var4) ^ var12 & var4 | var6 - (var6 | (var9 | var3))) - var6
    return result
def func6(arg22, arg23):
    def func7(acc, rest):
        var24 = -5 | (-9 - -4)
        if acc == 0:
            return var24
        else:
            result = func7(acc - 1, var24)
            return result
    result = func7(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 62'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
